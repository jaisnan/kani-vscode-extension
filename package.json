{
  "name": "kani-vscode-extension",
  "displayName": "Kani",
  "description": "VSCode IDE integration for Kani",
  "publisher": "model-checking",
  "repository": {
    "type": "git",
    "url": "https://github.com/model-checking/kani-vscode-extension"
  },
  "icon": "kani-logo.png",
  "galleryBanner": {
    "theme": "light"
  },
  "bugs": {
    "url": "https://github.com/model-checking/kani-vscode-extension/issues"
  },
  "version": "0.0.5",
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Testing"
  ],
  "permissions": [
    "debug"
  ],
  "activationEvents": [
    "onLanguage:rust",
    "workspaceContains:*Cargo.toml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "Kani.runKani",
        "when": "editorLangId == rust",
        "category": "Kani",
        "title": "Run Kani"
      },
      {
        "command": "Kani.runcargoKani",
        "when": "editorLangId == rust",
        "category": "Kani",
        "title": "Run Cargo Kani"
      },
      {
        "title": "Enable CodeLens",
        "command": "codelens-kani.enableCodeLens",
        "category": "CodeLens Sample"
      },
      {
        "title": "Disable Codelens",
        "command": "codelens-kani.disableCodeLens",
        "category": "CodeLens Sample"
      },
      {
        "command": "coverage-gutters.previewCoverageReport",
        "title": "Coverage Gutters: Preview Coverage Report"
      },
      {
        "command": "coverage-gutters.displayCoverage",
        "title": "Coverage Gutters: Display Coverage"
      },
      {
        "command": "coverage-gutters.toggleCoverage",
        "title": "Coverage Gutters: Toggle Coverage"
      },
      {
        "command": "coverage-gutters.watchCoverageAndVisibleEditors",
        "title": "Coverage Gutters: Watch"
      },
      {
        "command": "coverage-gutters.removeWatch",
        "title": "Coverage Gutters: Remove Watch"
      },
      {
        "command": "coverage-gutters.removeCoverage",
        "title": "Coverage Gutters: Remove Coverage"
      }
    ],
    "configuration": {
      "title": "Kani",
      "properties": {
        "codelens-kani.enableCodeLens": {
          "type": "boolean",
          "default": true
        },
        "Kani.showOutputWindow": {
          "type": "boolean",
          "default": false,
          "description": "Controls the visibility of the output window by default."
        },
        "coverage-gutters.highlightlight": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(0, 255, 64, 0.2)",
          "description": "light themed highlight for code coverage"
        },
        "coverage-gutters.highlightdark": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(0, 122, 30, 0.4)",
          "description": "dark themed highlight for code coverage"
        },
        "coverage-gutters.partialHighlightLight": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(255, 235, 0, 0.2)",
          "description": "light theme partial highlight for code coverage"
        },
        "coverage-gutters.partialHighlightDark": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(163, 149, 0, 0.4)",
          "description": "dark theme partial highlight for code coverage"
        },
        "coverage-gutters.noHighlightLight": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(255, 0, 0, 0.2)",
          "description": "light theme partial highlight for code coverage"
        },
        "coverage-gutters.noHighlightDark": {
          "type": "string",
          "scope": "resource",
          "default": "rgba(163, 0, 0, 0.4)",
          "description": "dark theme partial highlight for code coverage"
        },
        "coverage-gutters.gutterIconPathLight": {
          "type": "string",
          "scope": "resource",
          "description": "path to an icon (svg, png, etc) for displaying in the gutter for full coverage"
        },
        "coverage-gutters.gutterIconPathDark": {
          "type": "string",
          "scope": "resource",
          "description": "path to an icon (svg, png, etc) for displaying in the gutter for full coverage"
        },
        "coverage-gutters.partialGutterIconPathLight": {
          "type": "string",
          "scope": "resource",
          "description": "path to an icon (svg, png, etc) for displaying in the gutter for partial coverage"
        },
        "coverage-gutters.partialGutterIconPathDark": {
          "type": "string",
          "scope": "resource",
          "description": "path to an icon (svg, png, etc) for displaying in the gutter for partial coverage"
        },
        "coverage-gutters.noGutterIconPathLight": {
          "type": "string",
          "scope": "resource",
          "description": "path to an icon (svg, png, etc) for displaying in the gutter for no coverage"
        },
        "coverage-gutters.noGutterIconPathDark": {
          "type": "string",
          "scope": "resource",
          "description": "path to an icon (svg, png, etc) for displaying in the gutter for no coverage"
        },
        "coverage-gutters.showLineCoverage": {
          "type": "boolean",
          "default": false,
          "description": "show or hide the line coverage",
          "scope": "resource"
        },
        "coverage-gutters.showRulerCoverage": {
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "show or hide the ruler coverage"
        },
        "coverage-gutters.showGutterCoverage": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "show or hide the gutter coverage"
        },
        "coverage-gutters.ignoredPathGlobs": {
          "type": "string",
          "scope": "resource",
          "default": "**/{node_modules,venv,.venv,vendor}/**",
          "description": "paths that will be ignored by the extension"
        },
        "coverage-gutters.remotePathResolve": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "description": "helps with coverage generated outside the local file system by swapping fragments of remote paths with local ones (EG ['/var/www/', '/home/project/']). See https://github.com/ryanluker/vscode-coverage-gutters/issues/201 for more info."
        },
        "coverage-gutters.manualCoverageFilePaths": {
          "type": "array",
          "scope": "resource",
          "default": [],
          "description": "take manual control over the absolute path to your coverage file(s). NOTE: this path must be the full absolute path, there is no support for the predefined path variables."
        },
        "coverage-gutters.coverageBaseDir": {
          "type": "string",
          "scope": "resource",
          "default": "**",
          "description": "workspaceFolder relative path or glob that will be used for coverage file lookup `${coverageBaseDir}/{${coverageFileNames}}`"
        },
        "coverage-gutters.coverageFileNames": {
          "type": "array",
          "scope": "resource",
          "default": [
            "lcov.info",
            "cov.xml",
            "coverage.xml",
            "jacoco.xml",
            "coverage.cobertura.xml"
          ],
          "description": "coverage file names for the extension to automatically look for"
        },
        "coverage-gutters.coverageReportFileName": {
          "type": "string",
          "scope": "resource",
          "default": "coverage/**/index.html",
          "description": "default coverage report file names(can be glob style) to look for when using the preview command"
        },
        "coverage-gutters.customizable.status-bar-toggler-watchCoverageAndVisibleEditors-enabled": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "enable or disable the status bar item"
        },
        "coverage-gutters.customizable.context-menu": {
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "enable or disable quick commands in the context menu"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "pretty": "prettier --write \"src/**/*.ts\"",
    "prettier:check:ci": "./node_modules/.bin/prettier --check .",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.70.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.20.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-standard-with-typescript": "^23.0.0",
    "eslint-import-resolver-typescript": "^3.5.2",
    "eslint-plugin-header": "^3.1.1",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-n": "^15.5.1",
    "eslint-plugin-no-null": "^1.0.2",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-tsdoc": "^0.2.17",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "prettier": "2.8.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "esbuild": "0.16.2",
    "lcov-parse": "^1.0.0",
    "readline": "^1.3.0",
    "toml": "^3.0.0",
    "web-tree-sitter": "^0.20.8"
  }
}
